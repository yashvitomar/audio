{
	"info": {
		"_postman_id": "d9212c34-e2e2-42d9-80f0-7425e6ec5056",
		"name": "bx-blocks-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "account block",
			"item": [
				{
					"name": "Create Account (Email) Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  postman.setEnvironmentVariable(\"email\", jsonData.data.attributes.email);",
									"  console.log('account created!')",
									"} else {",
									"  console.warn('account creation failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"first_name\": \"Firstname\",\n\t\t\t\"last_name\": \"Lastname\",\n\t\t\t\"full_phone_number\": \"+1 310 854 0001\",\n\t\t\t\"email\": \"test@acme.com\",\n\t\t\t\"password\": \"{{password}}\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/account/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Account (Email) Copy 2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/account/accounts/email_confirmation",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"accounts",
								"email_confirmation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Country Code and Flag List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/account/accounts/country_code_and_flag",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"accounts",
								"country_code_and_flag"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login block",
			"item": [
				{
					"name": "Log In (request jwt)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  console.log('login success!')",
									"} else {",
									"  console.warn('login failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"real.jzuken@gmail.com\",\n\t\t\t\"password\": \"qwe123456!\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log In (request jwt) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  console.log('login success!')",
									"} else {",
									"  console.warn('login failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"real.jzuken@gmail.com\",\n\t\t\t\"password\": \"qwe123456!\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "profile block",
			"item": [
				{
					"name": "Change Phone Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  console.log('phone validation success!')",
									"} else {",
									"  console.warn('phone validation failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"new_phone_number\": \"+1 310 854 0003\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/profile/change_phone_validation",
							"host": [
								"{{host}}"
							],
							"path": [
								"profile",
								"change_phone_validation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account/Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  console.log('account updated!')",
									"} else {",
									"  console.warn('account update failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"first_name\": \"Firstname-updated\",\n\t\t\"last_name\": \"Lastname-updated\",\n\t\t\"new_phone_number\": \"+1 310 854 0002\",\n\t\t\"current_password\": \"{{password}}\",\n\t\t\"new_password\": \"{{newPassword}}\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/profile/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"profile",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"password\", postman.getEnvironmentVariable('newPassword'));",
									"  console.log('password changed!')",
									"} else {",
									"  console.warn('password change failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"current_password\": \"{{password}}\",\n\t\t\"new_password\": \"{{newPassword}}\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/profile/password",
							"host": [
								"{{host}}"
							],
							"path": [
								"profile",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account/Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/profile/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"profile",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile Validation Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/profile/validations",
							"host": [
								"{{host}}"
							],
							"path": [
								"profile",
								"validations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "forgot password",
			"item": [
				{
					"name": "Request OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"otpToken\", jsonData.meta.token);",
									"  console.log('otp request success!')",
									"} else {",
									"  console.warn('otp request failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"attributes\": {\n\t\t\t\"email\": \"{{email}}\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/forgot_password/otp",
							"host": [
								"{{host}}"
							],
							"path": [
								"forgot_password",
								"otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "OTP Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"token\": \"{{otpToken}}}\",\n\t\t\"otp_code\": 8644\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/forgot_password/otp_confirmation",
							"host": [
								"{{host}}"
							],
							"path": [
								"forgot_password",
								"otp_confirmation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"password\", postman.getEnvironmentVariable('newPassword'));",
									"  console.log('password changed!')",
									"} else {",
									"  console.warn('password change failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"token\": \"{{otpToken}}\",\n\t\t\"new_password\": \"{{newPassword}}\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/forgot_password/password",
							"host": [
								"{{host}}"
							],
							"path": [
								"forgot_password",
								"password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Debug",
			"item": [
				{
					"name": "SiceMe Test Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  postman.setEnvironmentVariable(\"email\", jsonData.data.attributes.email);",
									"  console.log('account created!')",
									"} else {",
									"  console.warn('account creation failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"data\":{\"type\":\"social_account\",\"attributes\":{\"email\":\"zdwedewdkscmvncd4gm@email.com\",\"password\":\"password\",\"unique_auth_id\":\"unique_auth_id\"}}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "sicemefullbuild-28456-ruby.28456.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts",
							"host": [
								"sicemefullbuild-28456-ruby",
								"28456",
								"dev",
								"ap-southeast-1",
								"aws",
								"svc",
								"builder",
								"ai"
							],
							"path": [
								"account",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "eCommerce - Account (Email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  postman.setEnvironmentVariable(\"email\", jsonData.data.attributes.email);",
									"  console.log('account created!')",
									"} else {",
									"  console.warn('account creation failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"first_name\": \"Firstname\",\n\t\t\t\"last_name\": \"Lastname\",\n\t\t\t\"full_phone_number\": \"+1 310 854 0001\",\n\t\t\t\"email\": \"test@acme.com\",\n\t\t\t\"password\": \"{{password}}\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/account/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "eCommerce - Activate Account (Email) Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MzYsImV4cCI6MTYwMjgwNzY2M30.Us7D6wdWSKj-HC0aVeflDP9l-wuoRmo2LaxaO977jUU4uFQPRVcrrvF1WLCSP-RS5Nw4oQoMnTN9U9eFHb-ppQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://ecommerceapp-39394-ruby.39394.dev.ap-southeast-1.aws.svc.builder.ai/account/accounts/email_confirmation",
							"protocol": "https",
							"host": [
								"ecommerceapp-39394-ruby",
								"39394",
								"dev",
								"ap-southeast-1",
								"aws",
								"svc",
								"builder",
								"ai"
							],
							"path": [
								"account",
								"accounts",
								"email_confirmation"
							]
						}
					},
					"response": []
				},
				{
					"name": "OPLUS1-Appt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  console.log('login success!')",
									"} else {",
									"  console.warn('login failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6NjIsImV4cCI6MTYwMTY1MzQwNH0.GYDcK-k9pmCIFt0iztxpiGYLCqOMpqz1ApZ1ciaD3QCLo_2fR63wnYzXpkVxfwRxfLHYnvRLZh138lSd1QznNw",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"real.jzuken@gmail.com\",\n\t\t\t\"password\": \"qwe123456!\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://oplus1-35789-ruby.35789.dev.ap-southeast-1.aws.svc.builder.ai/order_block/availabilities/get_sp_details?availability_date=02/25/2010&service_provider_id=4",
							"protocol": "https",
							"host": [
								"oplus1-35789-ruby",
								"35789",
								"dev",
								"ap-southeast-1",
								"aws",
								"svc",
								"builder",
								"ai"
							],
							"path": [
								"order_block",
								"availabilities",
								"get_sp_details"
							],
							"query": [
								{
									"key": "availability_date",
									"value": "02/25/2010"
								},
								{
									"key": "service_provider_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OPLUS1-LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code > 199 && pm.response.code < 300) {",
									"  var jsonData = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"token\", jsonData.meta.token);",
									"  console.log('login success!')",
									"} else {",
									"  console.warn('login failed', 'status code: ', pm.response.code)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"type\": \"email_account\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"test@me.com\",\n\t\t\t\"password\": \"pAssword123\"\n\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://oplus1-35789-ruby.35789.dev.ap-southeast-1.aws.svc.builder.ai/login/login",
							"protocol": "https",
							"host": [
								"oplus1-35789-ruby",
								"35789",
								"dev",
								"ap-southeast-1",
								"aws",
								"svc",
								"builder",
								"ai"
							],
							"path": [
								"login",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_dashboard",
			"item": [
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"title\": \"Dashboard_title_1\",\n        \"value\": 1\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/dashboard/dashboards",
							"host": [
								"{{host}}"
							],
							"path": [
								"dashboard",
								"dashboards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/dashboard/dashboards/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"dashboard",
								"dashboards",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/dashboard/dashboards/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"dashboard",
								"dashboards",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/dashboard/dashboards/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"dashboard",
								"dashboards",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"title\": \"Dashboard_title_2\",\n        \"value\": 2\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/dashboard/dashboards/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"dashboard",
								"dashboards",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_settings",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/settings/settings",
							"host": [
								"{{host}}"
							],
							"path": [
								"settings",
								"settings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_contact_us",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/contact_us/contacts",
							"host": [
								"{{host}}"
							],
							"path": [
								"contact_us",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjAzODUzfQ.v2vhV82a7SwXUr5mK2MLCXlqOncqMvoRCBTQ4GYz97YYpaK5MjR0TR-n3nrLAX7IMB6ZJhFFMQUrP1lfo1Iaag",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"name\": \"Contact_1\",\n        \"email\": \"email@mail.com\",\n        \"description\": \"Contact description\",\n        \"phone_number\": \"+380465547173\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/contact_us/contacts",
							"host": [
								"{{host}}"
							],
							"path": [
								"contact_us",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjAzODUzfQ.v2vhV82a7SwXUr5mK2MLCXlqOncqMvoRCBTQ4GYz97YYpaK5MjR0TR-n3nrLAX7IMB6ZJhFFMQUrP1lfo1Iaag",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/contact_us/contacts/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"contact_us",
								"contacts",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjAzODUzfQ.v2vhV82a7SwXUr5mK2MLCXlqOncqMvoRCBTQ4GYz97YYpaK5MjR0TR-n3nrLAX7IMB6ZJhFFMQUrP1lfo1Iaag"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"name\": \"Contact_1\",\n        \"email\": \"email@mail.com\",\n        \"description\": \"Contact description new\",\n        \"phone_number\": \"+380465547173\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/contact_us/contacts/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"contact_us",
								"contacts",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjAzODUzfQ.v2vhV82a7SwXUr5mK2MLCXlqOncqMvoRCBTQ4GYz97YYpaK5MjR0TR-n3nrLAX7IMB6ZJhFFMQUrP1lfo1Iaag"
							}
						],
						"url": {
							"raw": "{{host}}/contact_us/contacts/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"contact_us",
								"contacts",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_coupon_cg",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjg5NDU2fQ.ULXOSB33oYcs6Zl67ShRVilsuhawSKS7JScjZvwmziO7VgNq962NTSHngPo4tHHC4fpaYi1GAQ9sHtZAg0DduA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/coupon_cg/coupon_code_generator",
							"host": [
								"{{host}}"
							],
							"path": [
								"coupon_cg",
								"coupon_code_generator"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjg5NDU2fQ.ULXOSB33oYcs6Zl67ShRVilsuhawSKS7JScjZvwmziO7VgNq962NTSHngPo4tHHC4fpaYi1GAQ9sHtZAg0DduA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/coupon_cg/coupon_code_generator/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"coupon_cg",
								"coupon_code_generator",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n\t\t\"title\": \"CCG-1\",\n        \"description\": \"Coupon code genrator 1\",\n        \"code\": \"Code\",\n        \"discount_type\": \"flat\",\n        \"discount\": 10.5,\n        \"valid_from\": \"2020-09-12T16:07:58.664Z\",\n        \"valid_to\": \"2020-11-12T16:07:58.664Z\",\n        \"min_cart_value\": 1,\n        \"max_cart_value\": 200\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/coupon_cg/coupon_code_generator",
							"host": [
								"{{host}}"
							],
							"path": [
								"coupon_cg",
								"coupon_code_generator"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjg5NDU2fQ.ULXOSB33oYcs6Zl67ShRVilsuhawSKS7JScjZvwmziO7VgNq962NTSHngPo4tHHC4fpaYi1GAQ9sHtZAg0DduA"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": {\n        \"discount_type\": \"percentage\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/coupon_cg/coupon_code_generator/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"coupon_cg",
								"coupon_code_generator",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyNjg5NDU2fQ.ULXOSB33oYcs6Zl67ShRVilsuhawSKS7JScjZvwmziO7VgNq962NTSHngPo4tHHC4fpaYi1GAQ9sHtZAg0DduA"
							}
						],
						"url": {
							"raw": "{{host}}/coupon_cg/coupon_code_generator/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"coupon_cg",
								"coupon_code_generator",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_categories",
			"item": [
				{
					"name": "List Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/categories/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/categories/categories/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"categories\": [\n        {\n\t\t    \"name\": \"Category-1\"\n\t    },\n        {\n\t\t    \"name\": \"Category-2\"\n\t    }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/categories/categories/1?category_name=Category-1-new",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"categories",
								"1"
							],
							"query": [
								{
									"key": "category_name",
									"value": "Category-1-new"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/categories/categories/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"categories",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Subcategories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/categories/sub_categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"sub_categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Subcategory",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/categories/sub_categories/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"sub_categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subcategory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sub_category\": {\n        \"name\": \"Subcategory-1\"\n    },\n    \"parent_categories\": [\n        1\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/sub_categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"sub_categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Subcategory",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sub_category\": {\n        \"name\": \"Subcategory-1\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/sub_categories/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"sub_categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Subcategory",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/categories/sub_categories/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								"sub_categories",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_catalogue",
			"item": [
				{
					"name": "Catalogues",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"brand_id\": 1,\n    \"name\": \"Catalogue-1\",\n    \"sku\": \"sku-1\",\n    \"description\": \"First catalogue\",\n    \"manufacture_date\": \"2020-10-19T14:59:08.817Z\",\n    \"length\": 10.5,\n    \"breadth\": 1.5,\n    \"height\": 2,\n    \"stock_qty\": 10,\n    \"availability\": \"in_stock\",\n    \"weight\": 2.2,\n    \"price\": 0.1,\n    \"recommended\": true,\n    \"on_sale\": false,\n    \"sale_price\": 0.05,\n    \"discount\": 0.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/catalogues",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"brand_id\": 1,\n    \"name\": \"Catalogue-1\",\n    \"sku\": \"sku-1\",\n    \"description\": \"First catalogue this is\",\n    \"manufacture_date\": \"2020-10-19T14:59:08.817Z\",\n    \"length\": 10.5,\n    \"breadth\": 1.5,\n    \"height\": 2,\n    \"stock_qty\": 10,\n    \"availability\": \"in_stock\",\n    \"weight\": 2.2,\n    \"price\": 0.1,\n    \"recommended\": true,\n    \"on_sale\": false,\n    \"sale_price\": 0.05,\n    \"discount\": 0.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/catalogues/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Brands",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/brands",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"brands"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Brand-1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/brands",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"brands"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMjA1ODczfQ.8BLBBZnfFSrUDLyo-6Aiv1kYlNUEeHcP-aui0A35CNZNR593DXRfKSvdS-Jg9uXDWr8iVPOqojTpBezhV7jQaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/tags",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMjA1ODczfQ.8BLBBZnfFSrUDLyo-6Aiv1kYlNUEeHcP-aui0A35CNZNR593DXRfKSvdS-Jg9uXDWr8iVPOqojTpBezhV7jQaQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Tag-1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/tags",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"tags"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reviews",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMjA1ODczfQ.8BLBBZnfFSrUDLyo-6Aiv1kYlNUEeHcP-aui0A35CNZNR593DXRfKSvdS-Jg9uXDWr8iVPOqojTpBezhV7jQaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMjA1ODczfQ.8BLBBZnfFSrUDLyo-6Aiv1kYlNUEeHcP-aui0A35CNZNR593DXRfKSvdS-Jg9uXDWr8iVPOqojTpBezhV7jQaQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"catalogue_id\": 1,\n    \"rating\": 10,\n    \"comment\": \"A comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"reviews"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalogues variants colors",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants_colors",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants_colors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Catalogue variant color 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants_colors",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants_colors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalogues variants sizes",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants_sizes",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants_sizes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Catalogue variant size 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants_sizes",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants_sizes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalogues variants",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMjA1ODczfQ.8BLBBZnfFSrUDLyo-6Aiv1kYlNUEeHcP-aui0A35CNZNR593DXRfKSvdS-Jg9uXDWr8iVPOqojTpBezhV7jQaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"catalogue_id\": 1,\n    \"catalogue_variant_color\": 1,\n    \"catalogue_variant_size\": 1,\n    \"price\": 10.5,\n    \"stock_qty\": 3,\n    \"on_sale\": true,\n    \"sale_price\": 9,\n    \"discount_price\": 1,\n    \"length\": 3.3,\n    \"breadth\": 2.5,\n    \"height\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/catalogue/catalogues_variants",
									"host": [
										"{{host}}"
									],
									"path": [
										"catalogue",
										"catalogues_variants"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "bx_block_paypal",
			"item": [
				{
					"name": "Authorize",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMzgwOTAwfQ.WwnxYsoKGp6HjAQwoN4zn9g8UDiFrYiIB3Mgm3J5ZMQV-mnQwrr0HvhJ94cLUYFSJKneVsxUsMt7iaL--Wxh1A",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/paypal/authorize",
							"host": [
								"{{host}}"
							],
							"path": [
								"paypal",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Capture",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMzgwOTAwfQ.WwnxYsoKGp6HjAQwoN4zn9g8UDiFrYiIB3Mgm3J5ZMQV-mnQwrr0HvhJ94cLUYFSJKneVsxUsMt7iaL--Wxh1A",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_transaction_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/paypal/capture",
							"host": [
								"{{host}}"
							],
							"path": [
								"paypal",
								"capture"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refund",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzMzgwOTAwfQ.WwnxYsoKGp6HjAQwoN4zn9g8UDiFrYiIB3Mgm3J5ZMQV-mnQwrr0HvhJ94cLUYFSJKneVsxUsMt7iaL--Wxh1A"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_transaction_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/paypal/refund",
							"host": [
								"{{host}}"
							],
							"path": [
								"paypal",
								"refund"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_navmenu",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY0MjA1fQ.r574sqvsHwIBa3ZlL6IWfzK-PrsC0uFm-6qPzEjfIWQ418e2SbBBTPBIDYQicUsexiTUGKQLPpjuzmgFuRQGYw",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/navmenu/navigation_menu",
							"host": [
								"{{host}}"
							],
							"path": [
								"navmenu",
								"navigation_menu"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY0MjA1fQ.r574sqvsHwIBa3ZlL6IWfzK-PrsC0uFm-6qPzEjfIWQ418e2SbBBTPBIDYQicUsexiTUGKQLPpjuzmgFuRQGYw"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n\t\t\"attributes\":{\n\t\t\t\t\"left\": [{\"name\": \"Test\", \"url\": \"https://test.com\"}],\n\t\t\t\t\"right\": [{\"name\": \"Test1\", \"url\": \"https://test1.com\"}]\n\t\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/navmenu/navigation_menu",
							"host": [
								"{{host}}"
							],
							"path": [
								"navmenu",
								"navigation_menu"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_posts",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY2NzQ3fQ.SIv76VSJ_DwpYNMXhcNV7c3fElFnd-Q3oevEjfVMrRY1HtAmf-EuCadnlV2Ti6zKAxZvwDS-YkE1MsMsQDdLoA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/posts/posts",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY2NzQ3fQ.SIv76VSJ_DwpYNMXhcNV7c3fElFnd-Q3oevEjfVMrRY1HtAmf-EuCadnlV2Ti6zKAxZvwDS-YkE1MsMsQDdLoA"
							}
						],
						"url": {
							"raw": "{{host}}/posts/posts/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								"posts",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY2NzQ3fQ.SIv76VSJ_DwpYNMXhcNV7c3fElFnd-Q3oevEjfVMrRY1HtAmf-EuCadnlV2Ti6zKAxZvwDS-YkE1MsMsQDdLoA",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"data\":\n\t{\n\t\t\"attributes\":\n\t\t\t{\n\t\t\t\t\"name\": \"Test Product\",\n\t\t\t\t\"description\": \"New Product description\",\n\t\t\t\t\"price\": 10.52,\n\t\t\t\t\"currency\": \"$\",\n\t\t\t\t\"category_id\": 4,\n\t\t\t\t\"image\": {\"data\": \"g\", \"content_type\": \"image/jpeg\", \"filename\": \"image.jpg\"\n\t\t\t\t}\n\t\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/posts/posts",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY2NzQ3fQ.SIv76VSJ_DwpYNMXhcNV7c3fElFnd-Q3oevEjfVMrRY1HtAmf-EuCadnlV2Ti6zKAxZvwDS-YkE1MsMsQDdLoA"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"data\":\n\t{\n\t\t\"attributes\":\n\t\t\t{\n\t\t\t\t\"name\": \"Test Product new\",\n\t\t\t\t\"description\": \"Updated Product description\",\n\t\t\t\t\"price\": 20.01\n\t\t\t}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/posts/posts/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								"posts",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAzNDY2NzQ3fQ.SIv76VSJ_DwpYNMXhcNV7c3fElFnd-Q3oevEjfVMrRY1HtAmf-EuCadnlV2Ti6zKAxZvwDS-YkE1MsMsQDdLoA"
							}
						],
						"url": {
							"raw": "{{host}}/posts/posts/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"posts",
								"posts",
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_custom_form",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0MDcyMTk3fQ.ArQJ-3Wvqda-HoO0PkvdDsL2owpp3Sl4oohgMG9TDZCoLU4Wa30Y7ne6d4HlJ1IFUxqp907SB_K5cRresAnbew",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/custom_form/seller_accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"custom_form",
								"seller_accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NzY0MjM3fQ.1lKYhDnDx0OarNeHZc27DyvxAjX2m9ID8cPGebSvSXqgPsPd2Ef3S4DkVc0RehtdNX6Ae-EOAC3XDBOWZ0_AFQ"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firm_name\": \"First name\",\n    \"full_phone_number\": \"+380278218338\",\n    \"location\": \"us\",\n    \"country_code\": \"us\",\n    \"phone_number\": \"0278218338\",\n    \"gstin_number\": \"-1\",\n    \"wholesaler\": \"wut\",\n    \"retailer\": \"wut\",\n    \"manufacturer\": \"me\",\n    \"hallmarking_center\": \"x3\",\n    \"buy_gold\": \"no\",\n    \"buy_silver\": \"yep\",\n    \"sell_gold\": \"no\",\n    \"sell_silver\": \"no\",\n    \"activated\": true,\n    \"lat\": -1,\n    \"long\": \"very long\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/custom_form/seller_accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"custom_form",
								"seller_accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NzY0MjM3fQ.1lKYhDnDx0OarNeHZc27DyvxAjX2m9ID8cPGebSvSXqgPsPd2Ef3S4DkVc0RehtdNX6Ae-EOAC3XDBOWZ0_AFQ"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firm_name\": \"First name new\",\n    \"full_phone_number\": \"+380278218338\",\n    \"location\": \"us\",\n    \"country_code\": \"us\",\n    \"phone_number\": \"0278218338\",\n    \"gstin_number\": \"-1\",\n    \"wholesaler\": \"wut\",\n    \"retailer\": \"wut\",\n    \"manufacturer\": \"me\",\n    \"hallmarking_center\": \"x3\",\n    \"buy_gold\": \"no\",\n    \"buy_silver\": \"yep\",\n    \"sell_gold\": \"no\",\n    \"sell_silver\": \"no\",\n    \"activated\": true,\n    \"lat\": -1,\n    \"long\": \"very long\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/custom_form/seller_accounts/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"custom_form",
								"seller_accounts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_interactive_faqs",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTA5MjI5fQ.c-PTiBrjVOdDM0YDYJTngMZ1ljCTb1luIYwFQhcrwoQDGtKPv12OSCj9YdqksqA9CQ_SVXFk_lNGEIJ0bzjs-A"
							}
						],
						"url": {
							"raw": "{{host}}/interactive_faqs/interactive_faqs",
							"host": [
								"{{host}}"
							],
							"path": [
								"interactive_faqs",
								"interactive_faqs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTA5MjI5fQ.c-PTiBrjVOdDM0YDYJTngMZ1ljCTb1luIYwFQhcrwoQDGtKPv12OSCj9YdqksqA9CQ_SVXFk_lNGEIJ0bzjs-A"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Interactive Faq 1\",\n    \"content\": \"Content\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/interactive_faqs/interactive_faqs",
							"host": [
								"{{host}}"
							],
							"path": [
								"interactive_faqs",
								"interactive_faqs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTA5MjI5fQ.c-PTiBrjVOdDM0YDYJTngMZ1ljCTb1luIYwFQhcrwoQDGtKPv12OSCj9YdqksqA9CQ_SVXFk_lNGEIJ0bzjs-A"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Interactive Faq new\",\n    \"content\": \"Content new\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/interactive_faqs/interactive_faqs/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"interactive_faqs",
								"interactive_faqs",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTA5MjI5fQ.c-PTiBrjVOdDM0YDYJTngMZ1ljCTb1luIYwFQhcrwoQDGtKPv12OSCj9YdqksqA9CQ_SVXFk_lNGEIJ0bzjs-A"
							}
						],
						"url": {
							"raw": "{{host}}/interactive_faqs/interactive_faqs/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"interactive_faqs",
								"interactive_faqs",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTA5MjI5fQ.c-PTiBrjVOdDM0YDYJTngMZ1ljCTb1luIYwFQhcrwoQDGtKPv12OSCj9YdqksqA9CQ_SVXFk_lNGEIJ0bzjs-A"
							}
						],
						"url": {
							"raw": "{{host}}/interactive_faqs/interactive_faqs/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"interactive_faqs",
								"interactive_faqs",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_notifsettings",
			"item": [
				{
					"name": "Notification Settings",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/notification_settings",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"notification_settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/notification_settings/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"notification_settings",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Notification setting 1\",\n    \"description\": \"This is first notification setting\",\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/notification_settings",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"notification_settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Notification setting 1\",\n    \"description\": \"Updated description\",\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/notification_settings/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"notification_settings",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/notification_settings/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"notification_settings",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification Groups",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/groups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"groups",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/groups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"groups",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notification_setting_id\": 2,\n    \"group_type\": \"account_group\",\n    \"group_name\": \"Group 1\",\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notification_setting_id\": 2,\n    \"group_type\": \"account_group\",\n    \"group_name\": \"Group 1 new\",\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/groups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"groups",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification Subgroups",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/subgroups",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"subgroups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/subgroups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"subgroups",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"url": {
									"raw": "{{host}}/notifsettings/subgroups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"subgroups",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subgroup_type\": \"wishlist_item_out_of_stock\",\n    \"subgroup_name\": \"Subgroup 1\",\n    \"notification_group_id\": 2,\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/subgroups",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"subgroups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTkzMDA1fQ.Ya8VI03HRLuwSIQ3iOuiNf6TFOQ6Zt2QxA1zEp9Z3NGHhJ_VuV1zpU2x0Dh1Ud__AoaK7bk3CvwSNvGo6K7zqQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subgroup_type\": \"wishlist_item_out_of_stock\",\n    \"subgroup_name\": \"Subgroup 1 updated\",\n    \"notification_group_id\": 2,\n    \"state\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/notifsettings/subgroups/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"notifsettings",
										"subgroups",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Advanced Search",
			"item": [
				{
					"name": "Filter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NzYzMzYzfQ.wWHJ9lxXrif2jwA8gn-FBpvJTR58eqbXI70KTmbRIFkqGESK_lLSIFm_sxvwvy-Phx72IWqIVPDkVG2CYrcApw",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"buy_gold\": 0.0,\n    \"sell_gold\": 2.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/advanced_search/searchs/filter",
							"host": [
								"{{host}}"
							],
							"path": [
								"advanced_search",
								"searchs",
								"filter"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sorting",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NzYzMzYzfQ.wWHJ9lxXrif2jwA8gn-FBpvJTR58eqbXI70KTmbRIFkqGESK_lLSIFm_sxvwvy-Phx72IWqIVPDkVG2CYrcApw"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"ASC\",\n    \"search_term1\": \"buy_silver\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/advanced_search/searchs/sorting",
							"host": [
								"{{host}}"
							],
							"path": [
								"advanced_search",
								"searchs",
								"sorting"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_filter_items",
			"item": [
				{
					"name": "Filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA1MTA5OTc5fQ.SWUn_6pJnli2D4cl1gBXe-zEDG9QGpGtEi-lDXYt_3QMuVY-76NC8XMtOep74S-Mw8mhwkiSBJEUuVO-arjf7A",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/filter_items/filtering",
							"host": [
								"{{host}}"
							],
							"path": [
								"filter_items",
								"filtering"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_sorting",
			"item": [
				{
					"name": "Sorting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA1MTEyMjQ1fQ.REq9qAG3tujnBUaApZWBqBKpq7T6Io_doD6H-4YNaJGBe3mMfkdY_Pc-4uKy-bD0vuPELRaHFTDNyr6U4Zw9Uw"
							}
						],
						"url": {
							"raw": "{{host}}/sorting/sorting",
							"host": [
								"{{host}}"
							],
							"path": [
								"sorting",
								"sorting"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_order_management",
			"item": [
				{
					"name": "Orders",
					"item": [
						{
							"name": "My Orders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show Order Item",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/orders/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"catalogue_id\": 2,\n    \"quantity\": 1,\n    \"catalogue_variant_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/orders/1/cancel_order",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders",
										"1",
										"cancel_order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add address",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"delivery_address_id\": 5,\n    \"address\": {\n        \"billing_address\": {\n            \"name\": \"Address 1\",\n            \"flat_no\": 10,\n            \"address_type\": \"home\",\n            \"address\": \"Street 1 building 2\",\n            \"address_line_2\": \"Some details\",\n            \"zip_code\": 100,\n            \"phone_number\": \"+380268294322\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/orders/1/add_address_to_order",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders",
										"1",
										"add_address_to_order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update payment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction_id\": \"4C0832090D51CC03896E637CC6A5F6F3.uat01-vm-tx04\",\n    \"status\": \"success\",\n    \"schedule_time\": \"04/11/2020 18:00\",\n    \"is_gift\": false,\n    \"source\": \"online\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/orders/1/update_payment",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders",
										"1",
										"update_payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Apply Coupon",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"Code\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/orders/1/apply_coupon",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"orders",
										"1",
										"apply_coupon"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Addresses",
					"item": [
						{
							"name": "List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/addresses",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"name\": \"Address 1\",\n        \"flat_no\": 10,\n        \"address_type\": \"home\",\n        \"address\": \"Street 1 building 2\",\n        \"address_line_2\": \"Some details\",\n        \"zip_code\": 100,\n        \"phone_number\": \"+380268294322\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/addresses",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"addresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"name\": \"Address 1 new\",\n        \"flat_no\": 10,\n        \"address_type\": \"home\",\n        \"address\": \"Street 1 building 2\",\n        \"address_line_2\": \"Some details\",\n        \"zip_code\": 100,\n        \"phone_number\": \"+380268294322\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/order_management/addresses/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"addresses",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/addresses/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"addresses",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/order_management/addresses/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"order_management",
										"addresses",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "bx_block_payment_hyperpay",
			"item": [
				{
					"name": "Check hyperpay payment status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/payment_hyperpay/hyperpay_payments/payment_status?checkout_id=F7E35E8D27BC7C1F173E96E3F7CDFB78.uat01-vm-tx01&entityId=8ac7a4c874672c64017468b0fdcf0756",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_hyperpay",
								"hyperpay_payments",
								"payment_status"
							],
							"query": [
								{
									"key": "checkout_id",
									"value": "F7E35E8D27BC7C1F173E96E3F7CDFB78.uat01-vm-tx01"
								},
								{
									"key": "entityId",
									"value": "8ac7a4c874672c64017468b0fdcf0756"
								}
							]
						},
						"description": "Use this API endpoint for getting the payment status that has been paid by using hyperpay payment gateway. Both the parameters are mandatory to given and checkout_id is the id which was get after the successful checkout response."
					},
					"response": [
						{
							"name": "Check hyperpay payment status (pending)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"df2b5f6f8bacaf84af557a17108a72d4\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "44269a07-262f-4cef-8b13-a74dc7b84c47"
								},
								{
									"key": "X-Runtime",
									"value": "0.546166"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.000\",\n            \"description\": \"transaction pending\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:46:42+0000\",\n        \"ndc\": \"BD57D6363996F95A6A3F7209D7FF369E.uat01-vm-tx04\"\n    }\n}"
						},
						{
							"name": "Check hyperpay payment status success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTU5MjQ2fQ.Y5vDxvMIPfBj-1Wp9eNMtfGxj4ZSPhWFysedKuH_Qrz21dTeBaRkowikEfR7M8GCI_zLgGtcEly3mcEvFKspIQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"fcb1c2b80cd7bb480cc45a94bc839806\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "a7f2fc79-9a62-42eb-87c8-d6b5c861edb1"
								},
								{
									"key": "X-Runtime",
									"value": "0.625759"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"id\": \"8ac7a49f758e114b017592b5bad02f3e\",\n        \"paymentType\": \"DB\",\n        \"paymentBrand\": \"VISA\",\n        \"amount\": \"647.81\",\n        \"currency\": \"SAR\",\n        \"descriptor\": \"4801.4130.0669 Y-Trend\",\n        \"result\": {\n            \"code\": \"000.100.110\",\n            \"description\": \"Request successfully processed in 'Merchant in Integrator Test Mode'\"\n        },\n        \"resultDetails\": {\n            \"CscResultCode\": \"Unsupported\",\n            \"TransactionIdentfier\": \"1234567890123456789\",\n            \"ConnectorTxID1\": \"8ac7a49f758e114b017592b5bad02f3e\",\n            \"connectorId\": \"540\",\n            \"VerStatus\": \"E\",\n            \"BatchNo\": \"20111101\",\n            \"endToEndId\": \"26233508514971\",\n            \"AuthorizeId\": \"061452\",\n            \"AvsResultCode\": \"Unsupported\"\n        },\n        \"card\": {\n            \"bin\": \"411111\",\n            \"binCountry\": \"US\",\n            \"last4Digits\": \"1111\",\n            \"holder\": \"akash\",\n            \"expiryMonth\": \"05\",\n            \"expiryYear\": \"2021\"\n        },\n        \"customer\": {\n            \"ip\": \"157.119.83.26\",\n            \"ipCountry\": \"IN\"\n        },\n        \"customParameters\": {\n            \"SHOPPER_EndToEndIdentity\": \"fd2427299e66276fb8887316db5cc1eef572e7f822411304aaa7ca0151d06240\",\n            \"CTPE_DESCRIPTOR_TEMPLATE\": \"\"\n        },\n        \"risk\": {\n            \"score\": \"100\"\n        },\n        \"buildNumber\": \"df543be03775a7b68c1dae7192cbca4b4c079ff0@2020-11-03 11:18:44 +0000\",\n        \"timestamp\": \"2020-11-04 10:03:12+0000\",\n        \"ndc\": \"2E9B7B502742F3A08E794C67B642A55A.uat01-vm-tx03\"\n    }\n}"
						}
					]
				},
				{
					"name": "Hyperpay checkout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchantTransactionId\":\"OD00000001\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/payment_hyperpay/hyperpay_payments",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_hyperpay",
								"hyperpay_payments"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "bx_block_fedex_integration",
			"item": [
				{
					"name": "Create shipment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"shipments_attributes\": [{\n                \"full_truck\": false,\n                \"load_description\": \"Dummy load description\",\n                \"cod_value_attributes\": {\n                    \"amount\": 200,\n                    \"currency\": \"RS\"\n                },\n                \"shipment_value_attributes\": {\n                    \"amount\": 200,\n                    \"currency\": \"RS\"\n                },\n                \"delivery_attributes\": {\n                    \"address\": \"189, Shiv City, Indore\",\n                    \"city\": \"Indore\",\n                    \"country\": \"India\",\n                    \"email\": \"delivery.demo@mailinator.com\",\n                    \"name\": \"Deliver user\",\n                    \"phone\": \"1234567890\",\n                    \"instructions\": \"delivery instructions\",\n                    \"arrival_window_attributes\": {\n                        \"begin_at\": \"2020-10-09 07:13:07 UTC\",\n                        \"end_at\": \"2020-10-15 07:13:07 UTC\"\n                    },\n                    \"coordinate_attributes\": {\n                        \"latitude\": \"22.650562\",\n                        \"longitude\": \"75.833753\"\n                    }\n                },\n                \"pickup_attributes\": {\n                    \"address\": \"18, Vijay Nagar, Indore\",\n                    \"city\": \"Indore\",\n                    \"country\": \"India\",\n                    \"email\": \"pickup.demo@mailinator.com\",\n                    \"name\": \"Pickup user\",\n                    \"phone\": \"1234567891\",\n                    \"instructions\": \"pickup instructions\",\n                    \"arrival_window_attributes\": {\n                        \"begin_at\": \"2020-10-09 07:13:07 UTC\",\n                        \"end_at\": \"2020-10-15 07:13:07 UTC\"\n                    },\n                    \"coordinate_attributes\": {\n                        \"latitude\": \"22.759146\",\n                        \"longitude\": \"75.891044\"\n                    }\n                },\n                \"items_attributes\": [\n                    {\n                        \"weight\": 0.1,\n                        \"quantity\": 1,\n                        \"stackable\": true,\n                        \"item_type\": \"PALLET\",\n                        \"dimension_attributes\": {\n                            \"height\": 1,\n                            \"length\": 10,\n                            \"width\": 10\n\n                        }\n                    }\n                ]\n            }]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/fedex_integration/shipments",
							"host": [
								"{{host}}"
							],
							"path": [
								"fedex_integration",
								"shipments"
							]
						},
						"description": "Use this API endpoint for getting the payment status that has been paid by using hyperpay payment gateway. Both the parameters are mandatory to given and checkout_id is the id which was get after the successful checkout response."
					},
					"response": [
						{
							"name": "Check hyperpay payment status success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTU5MjQ2fQ.Y5vDxvMIPfBj-1Wp9eNMtfGxj4ZSPhWFysedKuH_Qrz21dTeBaRkowikEfR7M8GCI_zLgGtcEly3mcEvFKspIQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"fcb1c2b80cd7bb480cc45a94bc839806\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "a7f2fc79-9a62-42eb-87c8-d6b5c861edb1"
								},
								{
									"key": "X-Runtime",
									"value": "0.625759"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"id\": \"8ac7a49f758e114b017592b5bad02f3e\",\n        \"paymentType\": \"DB\",\n        \"paymentBrand\": \"VISA\",\n        \"amount\": \"647.81\",\n        \"currency\": \"SAR\",\n        \"descriptor\": \"4801.4130.0669 Y-Trend\",\n        \"result\": {\n            \"code\": \"000.100.110\",\n            \"description\": \"Request successfully processed in 'Merchant in Integrator Test Mode'\"\n        },\n        \"resultDetails\": {\n            \"CscResultCode\": \"Unsupported\",\n            \"TransactionIdentfier\": \"1234567890123456789\",\n            \"ConnectorTxID1\": \"8ac7a49f758e114b017592b5bad02f3e\",\n            \"connectorId\": \"540\",\n            \"VerStatus\": \"E\",\n            \"BatchNo\": \"20111101\",\n            \"endToEndId\": \"26233508514971\",\n            \"AuthorizeId\": \"061452\",\n            \"AvsResultCode\": \"Unsupported\"\n        },\n        \"card\": {\n            \"bin\": \"411111\",\n            \"binCountry\": \"US\",\n            \"last4Digits\": \"1111\",\n            \"holder\": \"akash\",\n            \"expiryMonth\": \"05\",\n            \"expiryYear\": \"2021\"\n        },\n        \"customer\": {\n            \"ip\": \"157.119.83.26\",\n            \"ipCountry\": \"IN\"\n        },\n        \"customParameters\": {\n            \"SHOPPER_EndToEndIdentity\": \"fd2427299e66276fb8887316db5cc1eef572e7f822411304aaa7ca0151d06240\",\n            \"CTPE_DESCRIPTOR_TEMPLATE\": \"\"\n        },\n        \"risk\": {\n            \"score\": \"100\"\n        },\n        \"buildNumber\": \"df543be03775a7b68c1dae7192cbca4b4c079ff0@2020-11-03 11:18:44 +0000\",\n        \"timestamp\": \"2020-11-04 10:03:12+0000\",\n        \"ndc\": \"2E9B7B502742F3A08E794C67B642A55A.uat01-vm-tx03\"\n    }\n}"
						},
						{
							"name": "Check hyperpay payment status (pending)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"df2b5f6f8bacaf84af557a17108a72d4\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "44269a07-262f-4cef-8b13-a74dc7b84c47"
								},
								{
									"key": "X-Runtime",
									"value": "0.546166"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.000\",\n            \"description\": \"transaction pending\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:46:42+0000\",\n        \"ndc\": \"BD57D6363996F95A6A3F7209D7FF369E.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Shipment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/fedex_integration/shipments/L1Q464",
							"host": [
								"{{host}}"
							],
							"path": [
								"fedex_integration",
								"shipments",
								"L1Q464"
							]
						},
						"description": "Use this API endpoint for getting the payment status that has been paid by using hyperpay payment gateway. Both the parameters are mandatory to given and checkout_id is the id which was get after the successful checkout response."
					},
					"response": [
						{
							"name": "Check hyperpay payment status (pending)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"df2b5f6f8bacaf84af557a17108a72d4\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "44269a07-262f-4cef-8b13-a74dc7b84c47"
								},
								{
									"key": "X-Runtime",
									"value": "0.546166"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.000\",\n            \"description\": \"transaction pending\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:46:42+0000\",\n        \"ndc\": \"BD57D6363996F95A6A3F7209D7FF369E.uat01-vm-tx04\"\n    }\n}"
						},
						{
							"name": "Check hyperpay payment status success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjA0NTU5MjQ2fQ.Y5vDxvMIPfBj-1Wp9eNMtfGxj4ZSPhWFysedKuH_Qrz21dTeBaRkowikEfR7M8GCI_zLgGtcEly3mcEvFKspIQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments/payment_status",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments",
										"payment_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"fcb1c2b80cd7bb480cc45a94bc839806\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "a7f2fc79-9a62-42eb-87c8-d6b5c861edb1"
								},
								{
									"key": "X-Runtime",
									"value": "0.625759"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"id\": \"8ac7a49f758e114b017592b5bad02f3e\",\n        \"paymentType\": \"DB\",\n        \"paymentBrand\": \"VISA\",\n        \"amount\": \"647.81\",\n        \"currency\": \"SAR\",\n        \"descriptor\": \"4801.4130.0669 Y-Trend\",\n        \"result\": {\n            \"code\": \"000.100.110\",\n            \"description\": \"Request successfully processed in 'Merchant in Integrator Test Mode'\"\n        },\n        \"resultDetails\": {\n            \"CscResultCode\": \"Unsupported\",\n            \"TransactionIdentfier\": \"1234567890123456789\",\n            \"ConnectorTxID1\": \"8ac7a49f758e114b017592b5bad02f3e\",\n            \"connectorId\": \"540\",\n            \"VerStatus\": \"E\",\n            \"BatchNo\": \"20111101\",\n            \"endToEndId\": \"26233508514971\",\n            \"AuthorizeId\": \"061452\",\n            \"AvsResultCode\": \"Unsupported\"\n        },\n        \"card\": {\n            \"bin\": \"411111\",\n            \"binCountry\": \"US\",\n            \"last4Digits\": \"1111\",\n            \"holder\": \"akash\",\n            \"expiryMonth\": \"05\",\n            \"expiryYear\": \"2021\"\n        },\n        \"customer\": {\n            \"ip\": \"157.119.83.26\",\n            \"ipCountry\": \"IN\"\n        },\n        \"customParameters\": {\n            \"SHOPPER_EndToEndIdentity\": \"fd2427299e66276fb8887316db5cc1eef572e7f822411304aaa7ca0151d06240\",\n            \"CTPE_DESCRIPTOR_TEMPLATE\": \"\"\n        },\n        \"risk\": {\n            \"score\": \"100\"\n        },\n        \"buildNumber\": \"df543be03775a7b68c1dae7192cbca4b4c079ff0@2020-11-03 11:18:44 +0000\",\n        \"timestamp\": \"2020-11-04 10:03:12+0000\",\n        \"ndc\": \"2E9B7B502742F3A08E794C67B642A55A.uat01-vm-tx03\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "bx_block_payment_razorpay",
			"item": [
				{
					"name": "Create payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Item 1 title\",\n    \"value\": 100500,\n    \"order_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/payment_razorpay/razorpays",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_razorpay",
								"razorpays"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Order Details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": \"order_FzRvY0Z7OwiElb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/payment_razorpay/razorpays/order_details",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_razorpay",
								"razorpays",
								"order_details"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Verify signature",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"razorpay_order_id\": \"order_FqkrUK0LDnZN8t\",\n    \"razorpay_payment_id\": \"pay_Fqks9uep8uL7k7\",\n    \"razorpay_signature\": \"f4ecd1479985f5c5b9d1a0a5d1cff1f60e0f77c136baec5a405102f88993f8e9\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/payment_razorpay/razorpays/verify_signature",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_razorpay",
								"razorpays",
								"verify_signature"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Capture",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": 1,\n    \"payment_id\": \"pay_Fqks9uep8uL7k7\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/payment_razorpay/razorpays/capture",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment_razorpay",
								"razorpays",
								"capture"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "bx_block_appointment_management",
			"item": [
				{
					"name": "List availabilities",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_provider_id\": 1,\n    \"availability_date\": \"21/01/18\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/appointment_management/availabilities",
							"host": [
								"{{host}}"
							],
							"path": [
								"appointment_management",
								"availabilities"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Create availability",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"start_time\": \"10:00 AM\",\n    \"end_time\": \"10:00 PM\",\n    \"availability_date\": \"21/01/18\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/appointment_management/availabilities",
							"host": [
								"{{host}}"
							],
							"path": [
								"appointment_management",
								"availabilities"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete all availabilities",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/appointment_management/availabilities/delete_all",
							"host": [
								"{{host}}"
							],
							"path": [
								"appointment_management",
								"availabilities",
								"delete_all"
							]
						},
						"description": "For checkout the hyperpay payment gateway you have to use this api. All the below parameters are mandorty else will raise error.\nHere, merchantTransactionId is used to get the order information who have same order number which given in merchantTransactionId and rest parameters is the part of hyperpay payment gateway."
					},
					"response": [
						{
							"name": "Hyperpay checkout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "token",
										"value": "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNjAyMjI3ODAxfQ.kZ_ViynrBHVBdxWHDmtxs37y0WHouI4rx7zXyTScgMfk4ooKSlmO8A0vhoQFfM8QbaJ0JIzIEHVCtrOXZ_uNQg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"merchantTransactionId\":\"TXUVYG785754\",\n\t\"currency_code\":\"SAR\",\n\t\"paymentType\":\"DB\",\n\t\"entityId\":\"8ac7a4c874672c64017468b0fdcf0756\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/bx_block_payments/hyperpay_payments",
									"host": [
										"{{url}}"
									],
									"path": [
										"bx_block_payments",
										"hyperpay_payments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "ETag",
									"value": "W/\"de0691de1585ba17afc970739ad588bc\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-Request-Id",
									"value": "147acd7b-28aa-446c-9ca7-760a54f208b6"
								},
								{
									"key": "X-Runtime",
									"value": "0.755219"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"body\": {\n        \"result\": {\n            \"code\": \"000.200.100\",\n            \"description\": \"successfully created checkout\"\n        },\n        \"buildNumber\": \"a8ec572c2fefd54c16a0d391203a49df2e154c52@2020-10-07 10:44:34 +0000\",\n        \"timestamp\": \"2020-10-08 10:20:14+0000\",\n        \"ndc\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\",\n        \"id\": \"52718C142454B9EB58C2D97C8341E004.uat01-vm-tx04\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "bx_block_calendar",
			"item": [
				{
					"name": "Get Booked Slots",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_provider_id\": 1,\n    \"date\": \"2020/11/30\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/calendar/booked_slots",
							"host": [
								"{{host}}"
							],
							"path": [
								"calendar",
								"booked_slots"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Availability Time",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"availability\": {\n        \"availability_date\": \"2020/11/30\",\n        \"start_time\": \"2020-11-27T16:38:31.016Z\",\n        \"end_time\": \"2020-11-29T18:38:31.016Z\",\n        \"unavailable_start_time\": \"2020-11-28T18:38:31.016Z\",\n        \"unavailable_end_time\": \"2020-11-28T18:40:31.016Z\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/calendar/availabilities/update_availability_time",
							"host": [
								"{{host}}"
							],
							"path": [
								"calendar",
								"availabilities",
								"update_availability_time"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_address",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/address/addresses",
							"host": [
								"{{host}}"
							],
							"path": [
								"address",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{bx_blocks_api_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": {\n        \"latitude\": 1.5,\n        \"longitude\": 3.4,\n        \"address\": \"StreetName house 3\",\n        \"address_type\": \"Home\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/address/addresses",
							"host": [
								"{{host}}"
							],
							"path": [
								"address",
								"addresses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_shopping_cart",
			"item": [
				{
					"name": "Orders",
					"item": [
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"order\": {\n        \"service_provider_id\": 1,\n        \"end_time\": \"2020-11-29T18:38:31.016Z\",\n        \"availability_date\": \"2020-11-28\",\n        \"address_id\": 1,\n        \"booking_date\": \"2020-10-29T18:38:31.016Z\",\n        \"slot_start_time\": \"2020-10-29T19:38:31.016Z\",\n        \"total_fees\": 1,\n        \"order_type\": \"instant booking\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"url": {
									"raw": "{{host}}/shopping_cart/orders/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"orders",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer Appointments",
					"item": [
						{
							"name": "Customer Orders",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter_by\": \"history\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/customer_appointments/customer_orders",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"customer_appointments",
										"customer_orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Notification Setting",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notify_me\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/customer_appointments/1/update_notification_setting",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"customer_appointments",
										"1",
										"update_notification_setting"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Provider Appointments",
					"item": [
						{
							"name": "Filter Order",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter_by\": \"history\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/service_provider_appointments/filter_order",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"service_provider_appointments",
										"filter_order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Order",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/service_provider_appointments/start_order",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"service_provider_appointments",
										"start_order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Finish Order",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/service_provider_appointments/finish_order",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"service_provider_appointments",
										"finish_order"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Availabilities",
					"item": [
						{
							"name": "Get Booked Time Slots",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_provider_id\": 1,\n    \"booking_date\": \"2020-10-29T18:38:31.016Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/shopping_cart/availabilities/get_booked_time_slots",
									"host": [
										"{{host}}"
									],
									"path": [
										"shopping_cart",
										"availabilities",
										"get_booked_time_slots"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "bx_block_coupons",
			"item": [
				{
					"name": "Coupons",
					"item": [
						{
							"name": "Check Applicability",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{bx_blocks_api_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"save_500\",\n            \"order_amount\": 2001\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/coupons/coupons/check_applicability",
									"host": [
										"{{host}}"
									],
									"path": [
										"coupons",
										"coupons",
										"check_applicability"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Refferal Coupon",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/coupons/coupons/get_refferal_coupon",
									"host": [
										"{{host}}"
									],
									"path": [
										"coupons",
										"coupons",
										"get_refferal_coupon"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Special Offers",
					"item": [
						{
							"name": "Get Service Provider",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"date\": \"18/01/21\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/coupons/special_offers/get_service_provider",
									"host": [
										"{{host}}"
									],
									"path": [
										"coupons",
										"special_offers",
										"get_service_provider"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "{{bx_blocks_api_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/coupons/special_offers/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"coupons",
										"special_offers",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "bx_block_location",
			"item": [
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/location/vans/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"location",
								"vans",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 22.9734229, \n    \"longitude\": 78.6568942\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/location/vans/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"location",
								"vans",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Near Vans",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 22.9734229, \n    \"longitude\": 78.6568942\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/location/vans/near_vans",
							"host": [
								"{{host}}"
							],
							"path": [
								"location",
								"vans",
								"near_vans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Estimated Arrival Time",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_provider_id\": 1,\n    \"address_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/location/vans/estimated_arrival_time",
							"host": [
								"{{host}}"
							],
							"path": [
								"location",
								"vans",
								"estimated_arrival_time"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_scheduling",
			"item": [
				{
					"name": "Show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"availability_date\": \"2020-10-29T18:38:31.016Z\",\n    \"service_provider_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/scheduling/service_provider_schedulings/get_sp_details",
							"host": [
								"{{host}}"
							],
							"path": [
								"scheduling",
								"service_provider_schedulings",
								"get_sp_details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_notifications",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/notifications/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/notifications/notifications/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"notifications",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notification\": {\n        \"headings\": \"Notification heading\",\n        \"contents\": \"Notification contents\",\n        \"app_url\": \"test/url\",\n        \"account_id\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notifications/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/notifications/notifications/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"notifications",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_comments",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/comments/comments",
							"host": [
								"{{host}}"
							],
							"path": [
								"comments",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/comments/comments/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"comments",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"post_id\": 1,\n            \"comment\": {\n                \"text\": \"Comment text\"\n            }\n        }  \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/comments/comments",
							"host": [
								"{{host}}"
							],
							"path": [
								"comments",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"post_id\": 1,\n            \"comment\": {\n                \"text\": \"Comment text new\"\n            }\n        }  \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/comments/comments/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"comments",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/comments/comments/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"comments",
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_like_a_post",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/like_a_post/like_posts",
							"host": [
								"{{host}}"
							],
							"path": [
								"like_a_post",
								"like_posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/like_a_post/like_posts/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"like_a_post",
								"like_posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{bx_blocks_api_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"like\",\n        \"attributes\": {\n            \"post_id\": 1\n        }  \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/like_a_post/like_posts",
							"host": [
								"{{host}}"
							],
							"path": [
								"like_a_post",
								"like_posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_automatic_renewals",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/automatic_renewals/automatic_renewals",
							"host": [
								"{{host}}"
							],
							"path": [
								"automatic_renewals",
								"automatic_renewals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{   \n    \"auto_renew\": {\n        \"subscription_type\": \"yearly\" ,\n        \"is_auto_renewal\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/automatic_renewals/automatic_renewals",
							"host": [
								"{{host}}"
							],
							"path": [
								"automatic_renewals",
								"automatic_renewals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/automatic_renewals/automatic_renewals/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"automatic_renewals",
								"automatic_renewals",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auto_renew\": {\n        \"subscription_type\": \"yearly\" ,\n        \"is_auto_renewal\": false\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/automatic_renewals/automatic_renewals/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"automatic_renewals",
								"automatic_renewals",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "bx_block_photo_library",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/photo_library/photo_library",
							"host": [
								"{{host}}"
							],
							"path": [
								"photo_library",
								"photo_library"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/photo_library/photo_library/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"photo_library",
								"photo_library",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "photo_library[photo_attributes[0[photo]]]",
									"type": "file",
									"src": "/Users/danmarcab/Desktop/Screenshot 2020-04-21 at 19.04.27.png"
								},
								{
									"key": "photo_library[photo_attributes[0[caption]]]",
									"value": "Photo desc",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/photo_library/photo_library",
							"host": [
								"{{host}}"
							],
							"path": [
								"photo_library",
								"photo_library"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/photo_library/photo_library/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"photo_library",
								"photo_library",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}